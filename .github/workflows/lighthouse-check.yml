name: Validacion Accesibilidad Lighthouse

on:
  pull_request:
    branches:
      - main
      - develop
    paths:
      - '**.html'

jobs:
  validate-html-accessibility:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          npm install -g http-server @lhci/cli

      - name: Start local server
        run: |
          http-server . -p 8080 -c-1 &
          sleep 5

      - name: Run Lighthouse CI
        run: |
          lhci autorun --collect.url=http://localhost:8080 --upload.target=filesystem --upload.outputDir=./lhci-report || true

      - name: Show Lighthouse scores summary
        run: |
          REPORT=$(find lhci-report -name 'manifest.json' | head -n 1)
          if [ -f "$REPORT" ]; then
            echo "üìä Lighthouse summary:"
            cat "$REPORT" | jq -r '.summary | to_entries[] | "\(.key): \(.value)"'
          else
            echo "‚ö†Ô∏è No Lighthouse summary found."
          fi

      - name: Show Accessibility Issues
        run: |
          REPORT_FILE=$(find lhci-report -name '*.report.json' | head -n 1)
          if [ -f "$REPORT_FILE" ]; then
            echo "üõë Principales problemas de accesibilidad:"
            cat "$REPORT_FILE" | jq -r '
              .audits 
              | to_entries 
              | map(select(.value.score != 1 and (.value.tags // [] | index("accessibility") != null))) 
              | sort_by(.value.score) 
              | .[0:5][] 
              | "- \(.value.title): \(.value.description)"' || echo "‚úÖ Sin problemas importantes detectados."
          else
            echo "‚ö†Ô∏è No se encontr√≥ el reporte Lighthouse."
          fi

      - name: Upload Lighthouse report artifact
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-report
          path: lhci-report
